name: Clang CI

on: [push, pull_request]

jobs:
  clang-tidy-format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Setup Environment
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            ninja-build clang clang-tidy clang-format cmake gcc-multilib \
            libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev \
            libxinerama-dev libxi-dev libxext-dev libxfixes-dev \
            libwayland-dev libwayland-bin libxkbcommon-dev

      - name: Configure CMake
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release -G Ninja

      - name: Run clang-tidy
        run: |
          cmake --build build
          clang-tidy $(find src -name "*.cpp") -- -I./src -I./src/Components -I./src/Systems
        continue-on-error: true

      - name: Run clang-format
        run: |
          find src -regex '.*\.\(cpp\|hpp\)' | xargs clang-format -i

      - name: Check for clang-format changes
        run: |
          git diff --exit-code

      - name: Report clang-tidy warnings
        if: failure()
        continue-on-error: true
        run: |
          echo "clang-tidy detected warnings or errors"

      - name: Upload clang-tidy results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: clang-tidy-results
          path: clang-tidy-result.json
